// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: satellite.proto

package pb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type FileHealthRequest struct {
	FileName             string   `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	UplinkId             NodeID   `protobuf:"bytes,2,opt,name=uplink_id,json=uplinkId,proto3,customtype=NodeID" json:"uplink_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileHealthRequest) Reset()         { *m = FileHealthRequest{} }
func (m *FileHealthRequest) String() string { return proto.CompactTextString(m) }
func (*FileHealthRequest) ProtoMessage()    {}
func (*FileHealthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_satellite_d0dcb6a733cf1157, []int{0}
}
func (m *FileHealthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileHealthRequest.Unmarshal(m, b)
}
func (m *FileHealthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileHealthRequest.Marshal(b, m, deterministic)
}
func (dst *FileHealthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileHealthRequest.Merge(dst, src)
}
func (m *FileHealthRequest) XXX_Size() int {
	return xxx_messageInfo_FileHealthRequest.Size(m)
}
func (m *FileHealthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FileHealthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FileHealthRequest proto.InternalMessageInfo

func (m *FileHealthRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

type FileHealthResponse struct {
	Segments             []*FileHealthResponse_SegmentInfo `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *FileHealthResponse) Reset()         { *m = FileHealthResponse{} }
func (m *FileHealthResponse) String() string { return proto.CompactTextString(m) }
func (*FileHealthResponse) ProtoMessage()    {}
func (*FileHealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_satellite_d0dcb6a733cf1157, []int{1}
}
func (m *FileHealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileHealthResponse.Unmarshal(m, b)
}
func (m *FileHealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileHealthResponse.Marshal(b, m, deterministic)
}
func (dst *FileHealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileHealthResponse.Merge(dst, src)
}
func (m *FileHealthResponse) XXX_Size() int {
	return xxx_messageInfo_FileHealthResponse.Size(m)
}
func (m *FileHealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FileHealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FileHealthResponse proto.InternalMessageInfo

func (m *FileHealthResponse) GetSegments() []*FileHealthResponse_SegmentInfo {
	if m != nil {
		return m.Segments
	}
	return nil
}

type FileHealthResponse_SegmentInfo struct {
	GoodNodes            int64    `protobuf:"varint,1,opt,name=good_nodes,json=goodNodes,proto3" json:"good_nodes,omitempty"`
	BadNodes             int64    `protobuf:"varint,2,opt,name=bad_nodes,json=badNodes,proto3" json:"bad_nodes,omitempty"`
	OfflineNodes         int64    `protobuf:"varint,3,opt,name=offline_nodes,json=offlineNodes,proto3" json:"offline_nodes,omitempty"`
	BelowRecover         int64    `protobuf:"varint,4,opt,name=below_recover,json=belowRecover,proto3" json:"below_recover,omitempty"`
	BelowRepair          int64    `protobuf:"varint,5,opt,name=below_repair,json=belowRepair,proto3" json:"below_repair,omitempty"`
	BelowSuccess         int64    `protobuf:"varint,6,opt,name=below_success,json=belowSuccess,proto3" json:"below_success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileHealthResponse_SegmentInfo) Reset()         { *m = FileHealthResponse_SegmentInfo{} }
func (m *FileHealthResponse_SegmentInfo) String() string { return proto.CompactTextString(m) }
func (*FileHealthResponse_SegmentInfo) ProtoMessage()    {}
func (*FileHealthResponse_SegmentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_satellite_d0dcb6a733cf1157, []int{1, 0}
}
func (m *FileHealthResponse_SegmentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileHealthResponse_SegmentInfo.Unmarshal(m, b)
}
func (m *FileHealthResponse_SegmentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileHealthResponse_SegmentInfo.Marshal(b, m, deterministic)
}
func (dst *FileHealthResponse_SegmentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileHealthResponse_SegmentInfo.Merge(dst, src)
}
func (m *FileHealthResponse_SegmentInfo) XXX_Size() int {
	return xxx_messageInfo_FileHealthResponse_SegmentInfo.Size(m)
}
func (m *FileHealthResponse_SegmentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FileHealthResponse_SegmentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FileHealthResponse_SegmentInfo proto.InternalMessageInfo

func (m *FileHealthResponse_SegmentInfo) GetGoodNodes() int64 {
	if m != nil {
		return m.GoodNodes
	}
	return 0
}

func (m *FileHealthResponse_SegmentInfo) GetBadNodes() int64 {
	if m != nil {
		return m.BadNodes
	}
	return 0
}

func (m *FileHealthResponse_SegmentInfo) GetOfflineNodes() int64 {
	if m != nil {
		return m.OfflineNodes
	}
	return 0
}

func (m *FileHealthResponse_SegmentInfo) GetBelowRecover() int64 {
	if m != nil {
		return m.BelowRecover
	}
	return 0
}

func (m *FileHealthResponse_SegmentInfo) GetBelowRepair() int64 {
	if m != nil {
		return m.BelowRepair
	}
	return 0
}

func (m *FileHealthResponse_SegmentInfo) GetBelowSuccess() int64 {
	if m != nil {
		return m.BelowSuccess
	}
	return 0
}

func init() {
	proto.RegisterType((*FileHealthRequest)(nil), "satellite.FileHealthRequest")
	proto.RegisterType((*FileHealthResponse)(nil), "satellite.FileHealthResponse")
	proto.RegisterType((*FileHealthResponse_SegmentInfo)(nil), "satellite.FileHealthResponse.SegmentInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SatelliteClient is the client API for Satellite service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SatelliteClient interface {
	Health(ctx context.Context, in *FileHealthRequest, opts ...grpc.CallOption) (*FileHealthResponse, error)
}

type satelliteClient struct {
	cc *grpc.ClientConn
}

func NewSatelliteClient(cc *grpc.ClientConn) SatelliteClient {
	return &satelliteClient{cc}
}

func (c *satelliteClient) Health(ctx context.Context, in *FileHealthRequest, opts ...grpc.CallOption) (*FileHealthResponse, error) {
	out := new(FileHealthResponse)
	err := c.cc.Invoke(ctx, "/satellite.Satellite/Health", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SatelliteServer is the server API for Satellite service.
type SatelliteServer interface {
	Health(context.Context, *FileHealthRequest) (*FileHealthResponse, error)
}

func RegisterSatelliteServer(s *grpc.Server, srv SatelliteServer) {
	s.RegisterService(&_Satellite_serviceDesc, srv)
}

func _Satellite_Health_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileHealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SatelliteServer).Health(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.Satellite/Health",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SatelliteServer).Health(ctx, req.(*FileHealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Satellite_serviceDesc = grpc.ServiceDesc{
	ServiceName: "satellite.Satellite",
	HandlerType: (*SatelliteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Health",
			Handler:    _Satellite_Health_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "satellite.proto",
}

func init() { proto.RegisterFile("satellite.proto", fileDescriptor_satellite_d0dcb6a733cf1157) }

var fileDescriptor_satellite_d0dcb6a733cf1157 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xcd, 0x4e, 0xf2, 0x40,
	0x14, 0x86, 0x69, 0xe1, 0x6b, 0xda, 0x03, 0x9f, 0xc6, 0x59, 0x35, 0x28, 0x01, 0x71, 0x83, 0x31,
	0x61, 0x81, 0x77, 0x40, 0xfc, 0x63, 0xc3, 0xa2, 0xb8, 0x32, 0x31, 0xcd, 0x94, 0x9e, 0xd6, 0x89,
	0xc3, 0x4c, 0xed, 0x14, 0xbd, 0x36, 0xef, 0xc0, 0x6b, 0xd0, 0x84, 0x6b, 0x31, 0x9d, 0x29, 0xd0,
	0xc4, 0xe8, 0xf6, 0x79, 0x9f, 0x39, 0x39, 0xf3, 0x1e, 0x38, 0x54, 0xb4, 0x40, 0xce, 0x59, 0x81,
	0xe3, 0x2c, 0x97, 0x85, 0x24, 0xde, 0x0e, 0x74, 0x21, 0x95, 0xa9, 0x34, 0x78, 0xf8, 0x08, 0x47,
	0x37, 0x8c, 0xe3, 0x1d, 0x52, 0x5e, 0x3c, 0x05, 0xf8, 0xb2, 0x46, 0x55, 0x90, 0x63, 0xf0, 0x12,
	0xc6, 0x31, 0x14, 0x74, 0x85, 0xbe, 0x35, 0xb0, 0x46, 0x5e, 0xe0, 0x96, 0x60, 0x4e, 0x57, 0x48,
	0x2e, 0xc0, 0x5b, 0x67, 0x9c, 0x89, 0xe7, 0x90, 0xc5, 0xbe, 0x3d, 0xb0, 0x46, 0x9d, 0xe9, 0xc1,
	0xc7, 0xa6, 0xdf, 0xf8, 0xdc, 0xf4, 0x9d, 0xb9, 0x8c, 0x71, 0x76, 0x15, 0xb8, 0x46, 0x98, 0xc5,
	0xc3, 0x77, 0x1b, 0x48, 0x7d, 0xbe, 0xca, 0xa4, 0x50, 0x48, 0xae, 0xc1, 0x55, 0x98, 0xae, 0x50,
	0x14, 0xca, 0xb7, 0x06, 0xcd, 0x51, 0x7b, 0x72, 0x3e, 0xde, 0x2f, 0xfc, 0xf3, 0xc1, 0x78, 0x61,
	0xec, 0x99, 0x48, 0x64, 0xb0, 0x7b, 0xda, 0xfd, 0xb2, 0xa0, 0x5d, 0x4b, 0x48, 0x0f, 0x20, 0x95,
	0x32, 0x0e, 0x85, 0x8c, 0x51, 0xe9, 0xc5, 0x9b, 0x81, 0x57, 0x92, 0x72, 0x2f, 0x55, 0x7e, 0x2b,
	0xa2, 0xdb, 0xd4, 0xd6, 0xa9, 0x1b, 0xd1, 0x2a, 0x3c, 0x83, 0xff, 0x32, 0x49, 0x38, 0x13, 0x58,
	0x09, 0x4d, 0x2d, 0x74, 0x2a, 0xb8, 0x93, 0x22, 0xe4, 0xf2, 0x2d, 0xcc, 0x71, 0x29, 0x5f, 0x31,
	0xf7, 0x5b, 0x46, 0xd2, 0x30, 0x30, 0x8c, 0x9c, 0x42, 0x67, 0x2b, 0x65, 0x94, 0xe5, 0xfe, 0x3f,
	0xed, 0xb4, 0x2b, 0xa7, 0x44, 0xfb, 0x39, 0x6a, 0xbd, 0x5c, 0xa2, 0x52, 0xbe, 0x53, 0x9b, 0xb3,
	0x30, 0x6c, 0x72, 0x0f, 0xde, 0x62, 0xdb, 0x09, 0xb9, 0x05, 0xc7, 0x54, 0x42, 0x4e, 0x7e, 0x69,
	0x4a, 0x9f, 0xae, 0xdb, 0xfb, 0xb3, 0xc7, 0x61, 0x63, 0xda, 0x7a, 0xb0, 0xb3, 0x28, 0x72, 0xf4,
	0xf5, 0x2f, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x42, 0xdf, 0x44, 0x27, 0x02, 0x00, 0x00,
}
